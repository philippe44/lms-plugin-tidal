name: Build and Tag

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.34'
          install-modules: XML::Simple Digest::SHA1

      - name: Zip repository
        id: zip
        run: zip TIDAL -r API *.pm ProtocolHandler HTML Settings install.xml

      - name: Set Version
        id: set-version
        uses: actions/github-script@v6
        with:
            script: |
              const fs = require('fs');
              const xml = fs.readFileSync('install.xml', 'utf8');
              const version = xml.match(/<version>([^<]+)<\/version>/)[1];
              console.log(`::set-output name=version::${version}`);
    
      - name: Use version
        run: echo "Version is ${{ steps.set-version.outputs.version }}"        
     
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release
          release_name: ${{ steps.set-version.outputs.version }}
          body: TIDAL plugin release
          draft: false
          prerelease: false

      - name: Update SHA and Version in repo.xml
        id: tag
        run: |
          perl repo/release.pl repo/repo.xml ${{ steps.set-version.outputs.version }} TIDAL.zip ${{ steps.create_release.outputs.html_url }} 
          cat repo/repo.xml

      - name: Update file
        run: |
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "message": "Update file",
              "content": "new content",
              "sha": "${{ github.sha }}"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/contents/repo/repo.xml2"
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./TIDAL.zip
          asset_name: TIDAL.zip
          asset_content_type: application/zip

          

      
